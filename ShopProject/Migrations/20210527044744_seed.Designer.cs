// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopProject.Data;

namespace ShopProject.Migrations
{
    [DbContext(typeof(ShopDbContext))]
    [Migration("20210527044744_seed")]
    partial class seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ShopProject.Models.Shop.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Model")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("ShopProject.Models.Shop.ChangePassWord", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CheckOriginalPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmedPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NewPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OriginalPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("ChangePassWords");
                });

            modelBuilder.Entity("ShopProject.Models.Shop.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "333桃園市龜山區德明路5號",
                            Admin = true,
                            Birthday = new DateTime(2021, 5, 27, 12, 47, 43, 555, DateTimeKind.Local).AddTicks(8881),
                            Email = "Admin@gmail.com",
                            Gender = "Female",
                            Name = "Admin",
                            Password = "123",
                            Phone = "0987654321"
                        },
                        new
                        {
                            Id = 2,
                            Address = "333桃園市龜山區德明路5號",
                            Admin = false,
                            Birthday = new DateTime(2021, 5, 27, 12, 47, 43, 556, DateTimeKind.Local).AddTicks(1486),
                            Email = "User@gmail.com",
                            Gender = "Male",
                            Name = "User",
                            Password = "123",
                            Phone = "0912345678"
                        });
                });

            modelBuilder.Entity("ShopProject.Models.Shop.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<long>("ProductModel")
                        .HasColumnType("bigint");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PurchaseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ShopProject.Models.Shop.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Inventory")
                        .HasColumnType("int");

                    b.Property<long>("Model")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2021, 5, 27, 12, 47, 43, 551, DateTimeKind.Local).AddTicks(4086),
                            ImgUrl = "~/images/clothes/clothes1.jpg",
                            Inventory = 99,
                            Model = 2021052200001L,
                            Name = "White Short Jacket",
                            Price = 900,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2021, 5, 27, 12, 47, 43, 553, DateTimeKind.Local).AddTicks(672),
                            ImgUrl = "~/images/clothes/clothes2.jpg",
                            Inventory = 99,
                            Model = 2021052200002L,
                            Name = "White Short vest ",
                            Price = 500,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2021, 5, 27, 12, 47, 43, 553, DateTimeKind.Local).AddTicks(766),
                            ImgUrl = "~/images/clothes/clothes3.jpg",
                            Inventory = 99,
                            Model = 2021052200003L,
                            Name = "White Lace vest",
                            Price = 500,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2021, 5, 27, 12, 47, 43, 553, DateTimeKind.Local).AddTicks(772),
                            ImgUrl = "~/images/clothes/clothes4.jpg",
                            Inventory = 99,
                            Model = 2021052200004L,
                            Name = "Sleeveless vest",
                            Price = 700,
                            TypeId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2021, 5, 27, 12, 47, 43, 553, DateTimeKind.Local).AddTicks(775),
                            ImgUrl = "~/images/bottom/bottom1.jpg",
                            Inventory = 99,
                            Model = 2021052200005L,
                            Name = "Gray Lace pants",
                            Price = 1200,
                            TypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2021, 5, 27, 12, 47, 43, 553, DateTimeKind.Local).AddTicks(779),
                            ImgUrl = "~/images/bottom/bottom2.jpg",
                            Inventory = 99,
                            Model = 2021052200006L,
                            Name = "Black Satin Pants",
                            Price = 1200,
                            TypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2021, 5, 27, 12, 47, 43, 553, DateTimeKind.Local).AddTicks(783),
                            ImgUrl = "~/images/bottom/bottom3.jpg",
                            Inventory = 99,
                            Model = 2021052200007L,
                            Name = "Yellow Plaid Pants",
                            Price = 1100,
                            TypeId = 2
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2021, 5, 27, 12, 47, 43, 553, DateTimeKind.Local).AddTicks(787),
                            ImgUrl = "~/images/bottom/bottom4.jpg",
                            Inventory = 99,
                            Model = 2021052200008L,
                            Name = "Five-Point Jeans",
                            Price = 1200,
                            TypeId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2021, 5, 27, 12, 47, 43, 553, DateTimeKind.Local).AddTicks(790),
                            ImgUrl = "~/images/shoes/shoes1.jpg",
                            Inventory = 99,
                            Model = 2021052200009L,
                            Name = "Red High Heels",
                            Price = 900,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2021, 5, 27, 12, 47, 43, 553, DateTimeKind.Local).AddTicks(793),
                            ImgUrl = "~/images/shoes/shoes2.jpg",
                            Inventory = 99,
                            Model = 2021052200010L,
                            Name = "White High Heels",
                            Price = 900,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 11,
                            CreationDate = new DateTime(2021, 5, 27, 12, 47, 43, 553, DateTimeKind.Local).AddTicks(796),
                            ImgUrl = "~/images/shoes/shoes3.jpg",
                            Inventory = 99,
                            Model = 2021052200011L,
                            Name = "Green High Heels",
                            Price = 900,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 12,
                            CreationDate = new DateTime(2021, 5, 27, 12, 47, 43, 553, DateTimeKind.Local).AddTicks(799),
                            ImgUrl = "~/images/shoes/shoes4.jpg",
                            Inventory = 99,
                            Model = 2021052200012L,
                            Name = "White Sneakers",
                            Price = 900,
                            TypeId = 3
                        },
                        new
                        {
                            Id = 13,
                            CreationDate = new DateTime(2021, 5, 27, 12, 47, 43, 553, DateTimeKind.Local).AddTicks(802),
                            ImgUrl = "~/images/accessories/accessories1.jpg",
                            Inventory = 99,
                            Model = 2021052200013L,
                            Name = "Gold Retro Watch",
                            Price = 600,
                            TypeId = 4
                        },
                        new
                        {
                            Id = 14,
                            CreationDate = new DateTime(2021, 5, 27, 12, 47, 43, 553, DateTimeKind.Local).AddTicks(805),
                            ImgUrl = "~/images/accessories/accessories2.jpg",
                            Inventory = 99,
                            Model = 2021052200014L,
                            Name = "Fimbrilla Earings",
                            Price = 500,
                            TypeId = 4
                        },
                        new
                        {
                            Id = 15,
                            CreationDate = new DateTime(2021, 5, 27, 12, 47, 43, 553, DateTimeKind.Local).AddTicks(808),
                            ImgUrl = "~/images/accessories/accessories3.jpg",
                            Inventory = 99,
                            Model = 2021052200015L,
                            Name = "Leather Handbag",
                            Price = 800,
                            TypeId = 4
                        },
                        new
                        {
                            Id = 16,
                            CreationDate = new DateTime(2021, 5, 27, 12, 47, 43, 553, DateTimeKind.Local).AddTicks(811),
                            ImgUrl = "~/images/accessories/accessories4.jpg",
                            Inventory = 99,
                            Model = 2021052200016L,
                            Name = "Retro Glasses",
                            Price = 800,
                            TypeId = 4
                        });
                });

            modelBuilder.Entity("ShopProject.Models.Shop.ProductType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("productTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Top"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bottom"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Shoes"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Accessories"
                        });
                });

            modelBuilder.Entity("ShopProject.Models.Shop.Purchase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiveAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiveName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceivePhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId1");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("ShopProject.Models.Shop.Order", b =>
                {
                    b.HasOne("ShopProject.Models.Shop.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductId");

                    b.HasOne("ShopProject.Models.Shop.Purchase", "Purchase")
                        .WithMany("Orders")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopProject.Models.Shop.Product", b =>
                {
                    b.HasOne("ShopProject.Models.Shop.ProductType", "Type")
                        .WithMany("Products")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShopProject.Models.Shop.Purchase", b =>
                {
                    b.HasOne("ShopProject.Models.Shop.Customer", "User")
                        .WithMany("Purchases")
                        .HasForeignKey("UserId1");
                });
#pragma warning restore 612, 618
        }
    }
}
